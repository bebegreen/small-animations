"use strict";var precacheConfig=[["/small-animations/index.html","dd48582b5c065abb4f14e995ebcade45"],["/small-animations/static/css/main.c148801e.css","9be30d06ce4d52ca8416b7f8b72ba137"],["/small-animations/static/js/main.4ec4618a.js","7a26f27a34c76d9f231d8d62fab1b6c0"],["/small-animations/static/media/1.f0b44219.png","f0b44219ad0253403405d3c338c3c513"],["/small-animations/static/media/10.c662cfa5.png","c662cfa51938928ca5d39d787d38d2ed"],["/small-animations/static/media/11.4f737165.png","4f7371652b7fe19fb1a2eb6a84d9caab"],["/small-animations/static/media/12.0d0b9fef.png","0d0b9feff9cac26d8f27fd924d8a6dbe"],["/small-animations/static/media/2.250d763c.png","250d763ce7dc528d9253a2dbb2abd89d"],["/small-animations/static/media/3.c18cb778.png","c18cb7787a3e732e8d350809461b76d9"],["/small-animations/static/media/4.44d25a50.png","44d25a50392d3dacc51e39f1e20c69a6"],["/small-animations/static/media/5.9be42b39.png","9be42b3939dbdfb9cba2a56baf2f549e"],["/small-animations/static/media/6.e5b4fb81.png","e5b4fb8199bc801357c2f0d1ccc62868"],["/small-animations/static/media/7.5d4a857c.png","5d4a857c9ca366e755ed289ac55f588c"],["/small-animations/static/media/8.cc9cfaa0.png","cc9cfaa064069cdd8c4ed1b107757c03"],["/small-animations/static/media/9.59d487ae.png","59d487ae85f3cda5c5663b190efa9cef"],["/small-animations/static/media/hover1.14c4a7ce.png","14c4a7ce4cfd55f611cd3ac78abbe82d"],["/small-animations/static/media/hover2.ed414527.png","ed4145276e6e1ada212bf298e81d0272"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/small-animations/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});